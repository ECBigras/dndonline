# @client.command()
# async def spell(*spell):
# 	url = f"https://dnd5e.fandom.com/wiki/{' '.join(spell).title().replace(' ', '%20')}"
# 	try:
# 		response = urllib.request.urlopen(url)
# 	except urllib.error.HTTPError as e:
#   		await client.say("Unexcpected HTTPError please contact my creators")
#   		print(e.code)
# 	except urllib.error.URLError as e:
#   		await client.say("that is not a valid spell name")
# 	else:
# 		try:
# 			"""
# 			part of the code is accesed
# 			the request was fulfilled without errors
# 			"""
# 			html = response.read()
# 			index = html.index(b"<div id=\"WikiaArticle\" class=\"WikiaArticle\">")
# 			spell_type = html[
# 				html.index(b"caption", index)+11:
# 				html.index(b"</i>", index)].decode("UTF-8")
# 			casting_time_index = html.index(b"Casting Time", index)
# 			casting_time = html[
# 				casting_time_index+22
# 				:html.index(b"</td>", casting_time_index)-1].decode("UTF-8")
# 			del casting_time_index
# 			range_index = html.index(b"Range", index)
# 			range_ = html[
# 				range_index+15
# 				:html.index(b"</td>", range_index)-1].decode("UTF-8")
# 			del range_index
# 			components_index = html.index(b"Components", index)
# 			components = html[
# 				components_index+20
# 				:html.index(b"</td>", components_index)-1].decode("UTF-8")
# 			del components_index
# 			duration_index = html.index(b"Duration", index)
# 			duration = html[
# 				duration_index+18
# 				:html.index(b"</td>", duration_index)-1].decode("UTF-8")
# 			del duration_index
# 			description_index = html.index(b"<p>", index)
# 			description = html[description_index+3:html.index(b"</p", description_index)].decode("UTF-8")
# 			del description_index
# 			description.replace("</a>", "")
# 			while "<a" in description and ">" in description:
# 				description = f"{description[:description.index('<a')]} {description[description.index('>')+1:]}"
# 			description = description.replace("</a>", "")
# 			await client.say(f"""{spell_type}
# <-------------------->
# Casting Time: {casting_time}
# <-------------------->
# Range: {range_}
# <-------------------->
# Components: {components}
# <-------------------->
# Duration: {duration}
# <-------------------->
# {description}
# """)
# 		except Exception as e:
# 			await client.say("""don't mind me, I'm just your friendly neigborhood  doctor trying to find out what's wrong with this bot""")
# 			await client.say(e)
